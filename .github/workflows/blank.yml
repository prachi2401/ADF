on:
  push:
    branches:
      - adf_publish
      - main
  workflow_dispatch:

permissions:
    contents: read
    pages: write
    id-token: write


jobs:
  build:
    runs-on: ubuntu-latest
    name: 'This deploys to Production'
    steps:
    - uses: actions/checkout@v3
      with:
          ref: adf_publish

    - name: Az Powershell Installation
      run: Install-Module -Name Az -Scope CurrentUser -Repository PSGallery -Force
      shell: pwsh
      
    - name: Azure Login
      uses: Azure/login@v2.0.0
      with:
        client-id: ${{ secrets.CLIENT_ID }}
        subscription-id: ${{ secrets.SUBSCRIPTION_ID }}
        tenant-id: ${{ secrets.TENANT_ID }}
        enable-AzPSSession: true
          
    # - name: Azure Login
    #   uses: azure/login@v1.4.3
    
    #     # Paste output of az ad sp create-for-rbac as value of secret variable:AZURE_CREDENTIAL
    #   with:
    #       client-id: ${{ secrets.CLIENT_ID }}
    #       subscription-id: ${{ secrets.SUBSCRIPTION_ID }}
    #       tenant-id: ${{ secrets.TENANT_ID }}
    #       enable-AzPSSession: true
      
        
    - name: Deploy Azure Resource Manager (ARM) Template
      uses: Azure/arm-deploy@v1.0.6
      with:
        # Provide the scope of the deployment. Valid values are: 'resourcegroup', 'managementgroup', 'subscription'
        scope: 'resourcegroup'
        # Target resource group of the deployment.
        resourceGroupName: 'POC'
        # Specify the path to the ADF ARM template. In this scenario, the workflow is in the same branch, 
        # hence we only add the folder and arm template name to the path
        template: ././ARMTemplateForFactory.json
        # Incremental (only add resources to resource group) or Complete (remove extra resources from resource group) or Validate (only validates the template).
        deploymentMode: Incremental
        parameters: factoryName=adf-target-poc
